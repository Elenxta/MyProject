@page "/Services"
@using Microsoft.AspNetCore.Components.Authorization
@using MyProject.Context
@using MyProject.Model
@using Microsoft.EntityFrameworkCore
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ServicesProvider ServicesProvider
@inject NavigationManager NavigationManager 


<h3 class="text-center mb-4" style="color: #d63384; font-weight: bold;">Create a Booking</h3>

<div class="container my-5">
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
        @foreach (var service in services)
        {
            <div class="col">
                <div class="card h-100 background shadow-sm">
                    <div class="card-body d-flex flex-column">
                        <!-- Service Title and Price -->
                        <div class="d-flex justify-content-between mb-3">
                            <h5 class="card-title">@service.Name</h5>
                            <h5><span class="badge bg-pink">@service.Price.ToString("C")</span></h5>
                            <h5><span class="badge bg-pink">@service.Duration</span></h5>
                        </div>

                        <!-- Service Description -->
                        <p class="card-text">@service.Description</p>

                        <!-- Book Button -->
                        <div class="mt-auto">
                            <button class="btn custom-book-btn w-100" @onclick="() => GoToBooking(service.Id)">💖 Book Now</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<style>
    /* Styling for Consistent UI */
    .text-center {
        font-family: 'Arial', sans-serif;
        color: #d63384;
    }

    .background {
        background-color: #ffe6f2;
        border: none;
        border-radius: 15px;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

    .card-title {
        color: #d63384;
        font-weight: bold;
        font-size: 1.25rem;
    }

    .custom-book-btn {
        background-color: #d63384;
        color: #fff;
        font-weight: bold;
        border: none;
        border-radius: 20px;
        padding: 0.75rem 1.25rem;
        transition: background-color 0.3s ease, box-shadow 0.3s ease;
    }

        .custom-book-btn:hover {
            background-color: #c52973;
            box-shadow: 0px 4px 10px rgba(214, 51, 132, 0.4);
        }

    .bg-pink {
        background-color: #ff4c61;
        color: #fff;
        font-weight: bold;
        padding: 0.5rem 0.75rem;
        border-radius: 10px;
    }
</style>

@code {
    [Parameter]
    public Service Service { get; set; }

    private int quantity = 1;
    private IEnumerable<Service> services;

    protected override async Task OnInitializedAsync()
    {
        services = await ServicesProvider.GetAllServicesAsync();
    }


    public async void GoToBooking(int id)
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        // Redirect to login if the user is not authenticated
        if (!user.Identity.IsAuthenticated)
        {
            NavigationManager.NavigateTo("/Account/Login", true);
        }
        else
        {
            // Proceed to booking page if user is authenticated
            NavigationManager.NavigateTo($"/Booking/{id}");
        }
    }
}

